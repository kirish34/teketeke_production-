name: Codex Ops (alias + smoke)

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      action:
        description: "alias | smoke"
        required: true
        default: "alias"
      deploy_url:
        description: "Vercel deployment URL (https://*.vercel.app)"
        required: true
      apex:
        description: "Apex domain"
        required: false
        default: "teketeke.app"
      www:
        description: "WWW domain"
        required: false
        default: "www.teketeke.app"

permissions:
  contents: read
  issues: read

env:
  APEX: teketeke.app
  WWW: www.teketeke.app
  # allow-list of GH usernames permitted to trigger via issue comment
  ALLOWED_ACTORS: "kirish34"

jobs:
  run:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issue_comment' &&
       contains(github.event.comment.body, '/codex') )

    steps:
      - name: Verify actor (comments only)
        if: github.event_name == 'issue_comment'
        run: |
          set -e
          ACTOR="${{ github.actor }}"
          IFS=',' read -ra ALLOWED <<< "${ALLOWED_ACTORS}"
          ok=0
          for a in "${ALLOWED[@]}"; do
            [ "$ACTOR" = "$(echo "$a" | xargs)" ] && ok=1
          done
          [ "$ok" -eq 1 ] || { echo "Actor $ACTOR not allowed; ignoring."; exit 0; }

      - name: Parse inputs
        id: parse
        run: |
          set -e
          ACTION=""
          DEPLOY_URL=""
          APEX_IN="${{ inputs.apex }}"
          WWW_IN="${{ inputs.www }}"
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            ACTION="${{ inputs.action }}"
            DEPLOY_URL="${{ inputs.deploy_url }}"
            APEX="${APEX_IN:-$APEX}"
            WWW="${WWW_IN:-$WWW}"
          else
            # Expected comment formats:
            # /codex alias https://xyz.vercel.app teketeke.app www.teketeke.app
            # /codex smoke
            body="${{ github.event.comment.body }}"
            ACTION=$(echo "$body" | awk '{print $2}')
            DEPLOY_URL=$(echo "$body" | awk '{print $3}')
            APEX_C=$(echo "$body" | awk '{print $4}')
            WWW_C=$(echo "$body" | awk '{print $5}')
            [ -n "$APEX_C" ] && APEX="$APEX_C"
            [ -n "$WWW_C" ] && WWW="$WWW_C"
          fi
          echo "action=$ACTION" >> $GITHUB_OUTPUT
          echo "deploy_url=$DEPLOY_URL" >> $GITHUB_OUTPUT
          echo "apex=$APEX" >> $GITHUB_OUTPUT
          echo "www=$WWW" >> $GITHUB_OUTPUT

      - name: Install deps (vercel, dig)
        run: |
          npm i -g vercel@latest
          sudo apt-get update && sudo apt-get install -y dnsutils

      - name: Wait for DNS (Apex + WWW)
        env:
          APEX: ${{ steps.parse.outputs.apex }}
          WWW: ${{ steps.parse.outputs.www }}
          MAX_WAIT: "1800"
        run: |
          set -euo pipefail
          t=0; S=20
          apex_ok(){ [ "$(dig +short A $APEX @8.8.8.8 | grep -c '^76\.76\.21\.21$')" -ge 1 ]; }
          www_ok(){
            cn=$(dig +short CNAME $WWW @8.8.8.8)
            [ -n "$cn" ] && echo "$cn" | grep -qi vercel-dns.com ||
            [ "$(dig +short A $WWW @8.8.8.8 | grep -c '^76\.76\.21\.21$')" -ge 1 ]
          }
          while ! apex_ok || ! www_ok; do
            echo "waiting for DNSâ€¦ apex=$(apex_ok || echo false) www=$(www_ok || echo false) t=$t"
            sleep $S; t=$((t+S)); [ $t -ge $MAX_WAIT ] && { echo "DNS timeout"; exit 1; }
          done

      - name: Alias domains (when action=alias)
        if: contains(steps.parse.outputs.action, 'alias')
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          DEPLOY_URL: ${{ steps.parse.outputs.deploy_url }}
          APEX: ${{ steps.parse.outputs.apex }}
          WWW: ${{ steps.parse.outputs.www }}
        run: |
          set -euo pipefail
          [ -n "$DEPLOY_URL" ] || { echo "deploy_url required"; exit 1; }
          vercel domains add "$APEX" --token "$VERCEL_TOKEN" --scope "$VERCEL_ORG_ID" || true
          vercel alias set "$DEPLOY_URL" "$APEX" --token "$VERCEL_TOKEN" --scope "$VERCEL_ORG_ID"
          vercel alias set "$DEPLOY_URL" "$WWW"  --token "$VERCEL_TOKEN" --scope "$VERCEL_ORG_ID"

      - name: Smoke tests (apex 200, www 308)
        env:
          APEX: ${{ steps.parse.outputs.apex }}
          WWW: ${{ steps.parse.outputs.www }}
        run: |
          set -euo pipefail
          base="https://$APEX"
          www="https://$WWW"
          chk(){ code=$(curl -s -o /dev/null -w "%{http_code}" "$1"); echo "$1 -> $code"; [ "$code" = "$2" ]; }
          for p in /ping /__version /__healthz /openapi.json /docs /redoc; do chk "$base$p" 200; done
          for p in / /ping /docs; do chk "$www$p" 308; done
          echo "HSTS:"; curl -sI "$base" | awk 'BEGIN{IGNORECASE=1}/^strict-transport-security:/{print}'
